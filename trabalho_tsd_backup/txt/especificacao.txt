FASE 1 para 22/janeiro/2013

Atenção: são 50 dias de prazo, organize-se para completar de maneira adequada. Devido ao longo 
prazo não serão aceitos trabalhos entregues após o prazo. Todos os trabalhos serão defendidos em 
laboratório.
Os alunos do BCC fazendo a disciplina como optativa podem fazer em dupla. Ambos os membros da dupla 
devem fazer todo o trabalho, use a oportunidade para melhorar sua capacidade de trabalhar e 
desenvolver software em equipe. Os trabalhos dos alunos do Mestrado e Doutorado são estritamente 
individuais!

Implemente o algoritmo Hi-ADSD. Na sua implementação faça cada nodo testes os logN clusters a 
cada rodada de testes, ao invés de testar um único cluster por rodada. Esta é a única diferença 
da especificação que foi vista em aula. Aqui está a função c(i,s,j) implementada Utilize o 
vetor State[0..N-1] para armazenar informações de diagnóstico: uma entrada State[i] deste 
vetor é -1 se o estado do nodo i é desconhecido; 0 se o nodo i é sem-falha; 1 se o nodo i 
é falho. Um nodo que inicializa desconhece o estado de todos os outros, menos o seu próprio 
estado. Na medida em que testes são executados todos os nodos descobrem o estado dos 
demais. Estruture seu log de forma a mostrar quais testes vão sendo executados e qual 
informação é obtida dos nodos testados.

Simule a execução de um evento: um nodo sem-falha fica falho, ou vice-versa. Repita para 
diversos tamanhos de sistema e eventos diferentes. Em cada caso mostre: (a) a latência, 
isto é tempo desde a ocorrência do evento até todos os nodos completarem seu 
diagnóstico; (b) o número de testes executados por todos os nodos durante o intervalo da latência.

Deve ser feita uma página Web, que contém:

1 -    Relatório HTML explicando como o trabalho foi feito (use desenhos, palavras, o que 
você quiser): o objetivo é detalhar as suas decisões para implementar seu trabalho.

2 -    Código fonte dos programas, comentados. ATENÇÃO: acrescente a todo programa a 
terminação ".txt" para que possa ser diretamente aberto em 
um browser. Exemplos: cliente.py.txt ou servidor.c.txt

3 -    Log dos testes executados: mostre explicitamente diversos casos testados, lembre-se é a 
partir desta listagem de testes que o professor vai medir até que ponto o trabalho está funcionando.


